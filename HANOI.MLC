HANOI    SUBENTRY BASES = (3)
*         WTOR  'Ingrese la cantidad de discos:',CINPUT,,WAITECB
*         WAIT  ECB=WAITECB
*         BAL   2,VALIDAR
*         CLC   VALIN,=C'S'
*         BNE   ABEXIT
*         PACK  PINPUT(8),CINPUT(2)
*         CVB   5,PINPUT
*         ST    5,CNTDISC
         BAL   2,INIT
         L     5,CNTDISC
         N     5,=F'1'
         CL    5,=F'0'
         BE    PAR
         BAL   2,RESIMP
         BAL   2,SHWALL
         B     FIN
PAR      BAL   2,RESPAR
         B     FIN
ABEXIT   WTO   'Entrada invalida. Saliendo.'
         B     FIN

FIN      SUBEXIT

*verifica si ya esta resuelto el puzzle. De ser asi, muestra un
*mensaje y termina el programa. Es un toque spaghetti
*pero eso me permite no repetir tanto codigo
CHECKSOL ST 2,RETURN3
         CLC  IINDEX(4),=F'0'
         BRNE NOSOL
         CLC  CINDEX(4),=F'0'
         BRE  SOL
         CLC  DINDEX(4),=F'0'
         BRNE NOSOL
SOL      WTO  'Puzzle completado!. Saliendo.'
         B    FIN
NOSOL    L    2,RETURN3
         BR   2

* mueve entre la torre izquierda y la central, en el sentido
* que sea valido
IZQ2CEN  ST   2,RETURN2
         LA   4,TIZQ
         ST   4,TORIGEN
         LA   4,TCENTRO
         ST   4,TDESTINO
         BAL  2,MOVLEGAL
         CLC  MOVVAL(1),=C's'
         BE   NOMOV1
         LA   4,TCENTRO
         ST   4,TORIGEN
         LA   4,TIZQ
         ST   4,TDESTINO
         BAL  2,MOVLEGAL
NOMOV1   L    2,RETURN2
         BR   2
* mueve entre la torre izquierda y la derecha, en el sentido
* que sea valido
IZQ2DER  ST   2,RETURN2
         LA   4,TIZQ
         ST   4,TORIGEN
         LA   4,TDER
         ST   4,TDESTINO
         BAL  2,MOVLEGAL
         CLC  MOVVAL(1),=C's'
         BE   NOMOV2
         LA   4,TDER
         ST   4,TORIGEN
         LA   4,TIZQ
         ST   4,TDESTINO
         BAL  2,MOVLEGAL
NOMOV2   L    2,RETURN2
         BR   2
* mueve entre la torre central y la derecha, en el sentido
* que sea valido
CEN2DER  ST   2,RETURN2
         LA   4,TCENTRO
         ST   4,TORIGEN
         LA   4,TDER
         ST   4,TDESTINO
         BAL  2,MOVLEGAL
         CLC  MOVVAL(1),=C's'
         BE   NOMOV3
         LA   4,TDER
         ST   4,TORIGEN
         LA   4,TCENTRO
         ST   4,TDESTINO
         BAL  2,MOVLEGAL
NOMOV3   L    2,RETURN2
         BR   2

*Si es posible, mueve desde la torre guardada en TORIGEN hasta
*la guardada en TDESTINO. deja 's'en MOVVAL si el movimiento es legal
*n en otro caso. Si no es legal, no mueve. Usa R4,R6
MOVLEGAL ST   2,RETURN1
         L    4,TDESTINO
         BAL  2,VERDISC
         L    6,ENMANO
         L    4,TORIGEN
         BAL  2,VERDISC
         CLC  ENMANO(4),=F'0'
         BRE  ILEGAL
         C    6,=F'0' *caso torre de destino vacia
         BRE  LEGAL
         C    6,ENMANO
         BNH  ILEGAL
LEGAL    MVC  MOVVAL(1),=C's'
         BAL  2,SACAR
         L    4,TDESTINO
         BAL  2,PONER
         L    2,RETURN1
         BR   2
ILEGAL   MVC  MOVVAL(1),=C'n'
         L    2,RETURN1
         BR   2


*deja en ENMANO el diametro del ultimo disco de la torre, sin sacarlo
*la direccion de la torre esta guardada en R4
VERDISC  L     5,0(4)
         C     5,=F'0'
         BRNH  VACIA
         LR    5,4
         A     5,0(4)
         MVC   ENMANO(4),0(5)
         BR    2
VACIA    MVC   ENMANO(4),=F'0'
         BR    2

*Saca el ultimo disco de la torre cuya direccion esta en R4
*Deja en ENMANO el diametro del disco, o 0 si
*la torre estaba vacia. Usa R5.
SACAR    L     5,0(4)
         C     5,=F'0'
         BRNH  TVACIA
         LR    5,4
         A     5,0(4)
         MVC   ENMANO(4),0(5)
         MVC   0(4,5),=F'0' *borro el disco
         L     5,0(4)
         S     5,=F'4' *decremento el indice
         ST    5,0(4)
         BR    2
TVACIA   MVC   ENMANO(4),=F'0'
         BR    2

*Pone un disco en la torre cuya direccion esta en R4
*No se fija si la operacion es valida
*El diametro del disco esta en ENMANO
PONER    LR    5,4
         A     5,0(4)
         A     5,=F'4'
         MVC   0(4,5),ENMANO
         L     5,0(4)
         A     5,=F'4'
         ST    5,0(4)
         BR    2

RESIMP   WTO   'resolucion impar'
         BR    2

RESPAR   ST    2,RETURN4
         BAL   2,SHWALL
LPPAR    BAL   2,IZQ2CEN
         BAL   2,SHWALL
         BAL   2,CHECKSOL
         BAL   2,IZQ2DER
         BAL   2,SHWALL
         BAL   2,CHECKSOL
         BAL   2,CEN2DER
         BAL   2,SHWALL
         BAL   2,CHECKSOL
         B     LPPAR
         L     2,RETURN4
         BR    2

SHWALL   MVC   TXTOUT(30),=30C' '
         LA    6,36 *indice de disco (posicion 9, largo fw=4)
         ST    2,RETURN1
LPSHOW   LA    4,0 *indice de TXTOUT, 0 para tizq, 10 para tcentro
         LA    8,IVECT
         BAL   2,SHWDISC
         LA    4,10
         LA    8,CVECT
         BAL   2,SHWDISC
         LA    4,20
         LA    8,DVECT
         BAL   2,SHWDISC
         WTO   MF=(E,WTOBLOC)
         S     6,=F'4'
         C     6,=F'0'
         BNL   LPSHOW
         L     2,RETURN1
         BR    2

*escribe a partir del indice de txtout guardado en R4
*accede al disco cuya direccion tiene base R8 e indice R6
*Usa R7
SHWDISC  AR    8,6
         CLC   0(4,8),=F'0'
         BE    NOOUT
         L     8,0(8)
         LA    7,TXTOUT
         AR    7,4
LPDISC   MVC   0(1,7),=C'X'
         A     7,=F'1'
         BCT   8,LPDISC
NOOUT    BR    2

VALIDAR  CLC   CINPUT(1),=C'0'
         BNE   DIEZ
         CLC   CINPUT+1(1),=C'3'
         BL    INVAL
         CLC   CINPUT+1(1),=C'9'
         BH    INVAL *teoricamente no se daria nunca
         MVC   VALIN,=C'S'
         BR    2
DIEZ     CLC   CINPUT(1),=C'1'
         BNE   INVAL
         CLC   CINPUT+1(1),=C'0'
         BNE   INVAL
         MVC   VALIN,=C'S'
         BR    2
INVAL    MVC   VALIN,=C'N'
         BR    2

*el indice es el offset desde TIZQ, considerando el espacio que ocupa
*guardar el mismo indice, por eso no le resto 1
INIT     MVC   TIZQ(132),=33F'0'
         L     4,CNTDISC
         LR    5,4
         LA    4,0
         M     4,=F'4'
         LR    4,5
         ST    4,IINDEX
         LA    4,0
         L     5,CNTDISC
LPLOAD   ST    5,IVECT(4)
         A     4,=F'4'
         BCT   5,LPLOAD
         BR    2

WAITECB  DC    F'0'
CINPUT   DS    CL2
PINPUT   DC    D'0'
VALIN    DS    C
CNTDISC  DC    F'4'

TIZQ     DS    0CL44
IINDEX   DS    F
IVECT    DS    10F

TCENTRO  DS    0CL44
CINDEX   DS    F
CVECT    DS    10F

TDER     DS    0CL44
DINDEX   DS    F
DVECT    DS    10F

WTOBLOC  DC    H'34'
         DC    H'0'
TXTOUT   DS    CL30

*variable usada para guardar una direccion de retorno
RETURN1  DS    F
RETURN2  DS    F
RETURN3  DS    F
RETURN4  DS    F
*Variables usadas en las operaciones de una torre
ENMANO   DS    F *aca guardo el disco que saco y estoy por poner
MOVVAL   DS    C *contiene 's' si el movimiento se realizo con exito
TDESTINO DS    F *punteros a torres
TORIGEN  DS    F
         END
